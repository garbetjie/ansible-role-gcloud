---
-
  name: Create reserved addresses.
  with_items: "{{ gcloud_compute_addresses }}"
  when: address.state|default('present') == 'present'
  include: addresses/create.yaml
  loop_control:
    loop_var: address
-
  name: Manage networks.
  with_items: "{{ gcloud_compute_networks }}"
  when: network.state|default('present') == 'present'
  include: networks/manage.yaml
  loop_control:
    loop_var: network
-
  name: Manage health checks.
  with_items: "{{ gcloud_compute_health_checks }}"
  include: health_checks/manage.yaml
  when: health_check.state|default('present') == 'present'
  loop_control:
    loop_var: health_check
-
  name: Manage HTTP health checks.
  with_items: "{{ gcloud_compute_http_health_checks }}"
  include: http_health_checks/manage.yaml
  when: http_health_check.state|default('present') == 'present'
  loop_control:
    loop_var: http_health_check
-
  name: Manage instance groups.
  with_items: "{{ gcloud_compute_instance_groups }}"
  include: instance_groups/manage.yaml
  when: instance_group.state|default('present') == 'present'
  loop_control:
    loop_var: instance_group
-
  name: Managed backend services.
  when: gcloud_compute_backend_services|length > 0
  with_items: "{{ gcloud_compute_backend_services }}"
  include: backend_services.yaml


# Delete items.

-
  name: Delete instance groups.
  with_items: "{{ gcloud_compute_instance_groups }}"
  include: instance_groups/delete.yaml
  when: instance_group.state|default('present') == 'absent'
  loop_control:
    loop_var: instance_group
-
  name: Delete HTTP health checks.
  with_items: "{{ gcloud_compute_http_health_checks }}"
  include: http_health_checks/delete.yaml
  when: http_health_check.state|default('present') == 'absent'
  loop_control:
    loop_var: http_health_check
-
  name: Delete health checks.
  with_items: "{{ gcloud_compute_health_checks }}"
  include: health_checks/delete.yaml
  when: health_check.state|default('present') == 'absent'
  loop_control:
    loop_var: health_check
-
  name: Delete networks.
  with_items: "{{ gcloud_compute_networks }}"
  when: network.state|default('present') == 'absent'
  include: networks/delete.yaml
  loop_control:
    loop_var: network
-
  name: Delete reserved addresses.
  with_items: "{{ gcloud_compute_addresses }}"
  when: address.state|default('present') == 'absent'
  include: addresses/delete.yaml
  loop_control:
    loop_var: address